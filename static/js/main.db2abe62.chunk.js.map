{"version":3,"sources":["App.less","api/firebase.js","api/courses.js","bd/BD.js","courses/Courses.js","api/class.js","api/categories.js","files/Files.js","api/file.js","create-course/CreateCourse.js","class/Class.js","categories/Categories.js","create-category/CreateCategory.js","create-class/CreateClass.js","api/user.js","eec/Answer.js","eec/Test.js","api/eec.js","eec/Eec.js","eec/List.js","dashboard/Dashboard.js","header/Header.js","home/Home.js","login/Login.js","subject/Subject.js","context/Context.js","eec-view/EecView.js","utils/lodash.js","eec-test/ABtn.js","eec-test/ABtns.js","eec-test/ABtns1.js","eec-test/Section.js","eec-test/EecTest.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","firebaseStorage","storage","ref","find","a","db","collection","where","get","res","success","data","docs","map","d","id","e","findBy","category","findOne","doc","exists","message","insert","add","JSON","parse","stringify","createAt","Date","getTime","updateAt","active","update","remove","CustomBreadcrumb","props","title","links","suffix","className","gutter","type","align","span","Item","l","i","url","key","to","confirm","Modal","Courses","useState","setData","loading","setLoading","columns","dataIndex","width","render","r","justify","block","size","onClick","content","name","okText","okType","cancelText","onOk","api","fetch","onCancel","console","log","useEffect","dataSource","orderBy","total","Files","files","setFiles","onChange","initialValue","length","htmlFor","tmpFiles","Array","from","target","tmp","forEach","f","push","warning","multiple","accept","pagination","file","Math","floor","num","pow","round","toFixed","humanFileSize","splice","uploadDirectory","Promise","resolve","reject","fileUpload","child","put","cacheControl","contentType","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","then","downloadURL","Form","create","match","params","classes","setClasses","categories","setCategories","all","apiClass","apiCategories","resClasses","resCategories","history","replace","getFieldDecorator","form","spinning","indicator","spin","onSubmit","preventDefault","validateFields","uploadFiles","tmpData","warn","label","rules","required","undefined","c","Option","value","class","desc","TextArea","videoURL","placeholder","style","htmlType","Class","colums","Categories","login","email","password","auth","signInWithEmailAndPassword","logout","signOut","Answer","getFieldValue","sectionId","marginBottom","extra","icon","slug","Group","totalChoice","filter","labelCol","wrapperCol","answers","answer","Test","sections","setSections","s","questions","sectionIndex","removeSection","j","answerIndex","removeAnswer","addAnswer","year","Number","parseInt","set","merge","TabPane","Tabs","V","0","1","2","3","4","5","6","versions","setVersions","current","setCurrent","formItemLayout","xs","sm","Object","keys","setFieldsValue","pdf","setPDF","activeKey","hideAdd","onEdit","v","tab","textTransform","href","index","apiFile","pdfURL","tmpVersions","window","scrollTo","List","toUpperCase","Sider","Layout","Header","Footer","Content","Dashboard","Menu","SubMenu","pathname","minHeight","background","margin","theme","defaultSelectedKeys","location","matchPath","path","exact","strict","mode","user","color","component","CreateCourse","CreateClass","CreateCategory","EecList","Eec","useLocation","checkURL","src","Home","Card","Meta","md","lg","hoverable","cover","alt","actions","padding","display","alignItems","justifyContent","Password","Subject","classData","setClass","courses","setCourses","apiCourses","resClass","resCourses","yp","show","setShow","currentCourse","setCurrentCourse","visible","footer","maskClosable","height","frameBorder","allow","allowFullScreen","bordered","position","top","right","classId","getClassName","maxWidth","description","Context","React","createContext","ContextProvider","setUser","onAuthStateChanged","Provider","children","ContextConsumer","Consumer","EecView","marginRight","textAlign","toLocaleUpperCase","years","setYears","y","limit","ABtn","selected","setSelected","shape","ABtns","_","types","Section","q","flex","ABtns1","toLowerCase","EecTest","version","setVisible","marginTop","frameborder","Private","useContext","Public","App","Login","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.db2abe62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/App.69181621.less\";","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/functions\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCEDGI06fMjuJkcMekxlusIVrNpc_CorK8\",\r\n  authDomain: \"ecourse-170f5.firebaseapp.com\",\r\n  databaseURL: \"https://ecourse-170f5.firebaseio.com\",\r\n  projectId: \"ecourse-170f5\",\r\n  storageBucket: \"ecourse-170f5.appspot.com\",\r\n  messagingSenderId: \"870495393028\",\r\n  appId: \"1:870495393028:web:5be12c356877fad723ac51\",\r\n  measurementId: \"G-XB2R6DZFR8\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\nconst firestore = firebaseApp.firestore();\r\nconst firebaseStorage = firebaseApp.storage().ref();\r\n\r\nexport { firebase, firebaseApp, firebaseStorage as storage, firestore as db };\r\n","import { db } from \"./firebase\";\r\nexport default {\r\n    find: async () => {\r\n        try {\r\n            const res = await db\r\n                .collection(\"courses\")\r\n                .where(\"active\", \"==\", true)\r\n                .get();\r\n            return {\r\n                success: true,\r\n                data: res.docs.map(d => ({ id: d.id, ...d.data() }))\r\n            };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    findBy: async category => {\r\n        try {\r\n            const res = await db\r\n                .collection(\"courses\")\r\n                .where(\"active\", \"==\", true)\r\n                .where(\"category\", \"==\", category)\r\n                .get();\r\n            return {\r\n                success: true,\r\n                data: res.docs.map(d => ({ id: d.id, ...d.data() }))\r\n            };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    findOne: async id => {\r\n        try {\r\n            const res = await db\r\n                .collection(\"courses\")\r\n                .doc(id)\r\n                .get();\r\n            if (res.exists) {\r\n                return { success: true, data: { ...res.data(), id } };\r\n            }\r\n            return { success: false, e: { message: \"Not Found\" } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    insert: async data => {\r\n        try {\r\n            const res = await db.collection(\"courses\").add(\r\n                JSON.parse(\r\n                    JSON.stringify({\r\n                        ...data,\r\n                        createAt: new Date().getTime(),\r\n                        updateAt: new Date().getTime(),\r\n                        active: true\r\n                    })\r\n                )\r\n            );\r\n            return { success: true, data: { id: res.id } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    update: async (id, data) => {\r\n        try {\r\n            await db\r\n                .collection(\"courses\")\r\n                .doc(id)\r\n                .update(\r\n                    JSON.parse(\r\n                        JSON.stringify({\r\n                            ...data,\r\n                            updateAt: new Date().getTime()\r\n                        })\r\n                    )\r\n                );\r\n            return { success: true };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    remove: async id => {\r\n        try {\r\n            await db\r\n                .collection(\"courses\")\r\n                .doc(id)\r\n                .update({ active: false });\r\n            return { success: true, data: { id } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { Breadcrumb, Icon, Row, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./BD.scss\";\r\nconst CustomBreadcrumb = props => {\r\n  const { title, links = [], suffix = \"\" } = props;\r\n  return (\r\n    <section className=\"comp-bread-crumb\">\r\n      <Row gutter={20} type=\"flex\" align=\"middle\">\r\n        <Col span={12}>\r\n          <h2>{title}</h2>\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>\r\n              <Icon type=\"home\" />\r\n            </Breadcrumb.Item>\r\n            {links.map((l, i) =>\r\n              l.url ? (\r\n                <Breadcrumb.Item key={`b-link-${i}`}>\r\n                  <Link to={l.url}>{l.title}</Link>\r\n                </Breadcrumb.Item>\r\n              ) : (\r\n                <Breadcrumb.Item key={`b-link-${i}`}>{l.title}</Breadcrumb.Item>\r\n              )\r\n            )}\r\n          </Breadcrumb>\r\n        </Col>\r\n        <Col span={12} className=\"text-right\">\r\n          {suffix}\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\nexport default CustomBreadcrumb;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button, Row, Col, Modal } from \"antd\";\r\nimport api from \"../api/courses\";\r\nimport BD from \"../bd/BD\";\r\n\r\nconst { confirm } = Modal;\r\nconst Courses = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const remove = (i, id) => {\r\n        confirm({\r\n            title: \"Устгахдаа итгэлтэй байна уу ?\",\r\n            content: data[i].name,\r\n            okText: \"Тийм\",\r\n            okType: \"danger\",\r\n            cancelText: \"Үгүй\",\r\n            async onOk() {\r\n                await api.remove(id);\r\n                fetch();\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Нэр\",\r\n            dataIndex: \"name\",\r\n            key: \"name\"\r\n        },\r\n        {\r\n            title: \"Тайлбар\",\r\n            dataIndex: \"desc\",\r\n            key: \"desc\"\r\n        },\r\n\r\n        {\r\n            title: \"\",\r\n            key: \"actions\",\r\n            width: 250,\r\n            render: r => {\r\n                return (\r\n                    <Row gutter={20} type=\"flex\" align=\"middle\" justify=\"end\">\r\n                        <Col span={10}>\r\n                            <Link to={`/dashboard/courses/${r.id}`}>\r\n                                <Button block size=\"small\">\r\n                                    Засах\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={2} className=\"text-center\">\r\n                            |\r\n                        </Col>\r\n                        <Col span={10}>\r\n                            <Button\r\n                                type=\"danger\"\r\n                                block\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    remove(r.i, r.id);\r\n                                }}\r\n                            >\r\n                                Устгах\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n\r\n    const fetch = async () => {\r\n        setLoading(true);\r\n        const res = await api.find();\r\n        if (res.success) {\r\n            setData(res.data);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch();\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"page-class\">\r\n            <BD\r\n                title=\"Хичээлийн Жагсаалт\"\r\n                links={[\r\n                    {\r\n                        title: \"Хичээлийн жагсаалт\"\r\n                    }\r\n                ]}\r\n                suffix={\r\n                    <Link to={\"/dashboard/courses/create\"}>\r\n                        <Button className=\"primary\">Нэмэх</Button>\r\n                    </Link>\r\n                }\r\n            />\r\n            <Table\r\n                dataSource={data.map((d, i) => ({ i, ...d }))}\r\n                columns={columns}\r\n                loading={loading}\r\n            />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Courses;\r\n","import { db } from \"./firebase\";\r\nexport default {\r\n    find: async () => {\r\n        try {\r\n            const res = await db\r\n                .collection(\"class\")\r\n                .where(\"active\", \"==\", true)\r\n                .orderBy(\"createAt\")\r\n                .get();\r\n            return {\r\n                success: true,\r\n                data: res.docs.map(d => ({ id: d.id, ...d.data() }))\r\n            };\r\n        } catch (e) {\r\n            console.log(e);\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    findOne: async id => {\r\n        try {\r\n            const res = await db\r\n                .collection(\"class\")\r\n                .doc(id)\r\n                .get();\r\n            if (res.exists) {\r\n                return { success: true, data: { ...res.data(), id } };\r\n            }\r\n            return { success: false, e: { message: \"Not Found\" } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    insert: async data => {\r\n        try {\r\n            const res = await db.collection(\"class\").add(\r\n                JSON.parse(\r\n                    JSON.stringify({\r\n                        ...data,\r\n                        createAt: new Date().getTime(),\r\n                        updateAt: new Date().getTime(),\r\n                        active: true\r\n                    })\r\n                )\r\n            );\r\n            return { success: true, data: { id: res.id } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    remove: async id => {\r\n        try {\r\n            await db\r\n                .collection(\"class\")\r\n                .doc(id)\r\n                .update({ active: false });\r\n            return { success: true, data: { id } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    }\r\n};\r\n","import { db } from './firebase';\r\nexport default {\r\n\tfind: async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await db\r\n\t\t\t\t.collection('categories')\r\n\t\t\t\t.where('active', '==', true)\r\n\t\t\t\t.get();\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\tdata: res.docs.map(d => ({ id: d.id, ...d.data() }))\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false, e };\r\n\t\t}\r\n\t},\r\n\tfindOne: async id => {\r\n\t\ttry {\r\n\t\t\tconst res = await db\r\n\t\t\t\t.collection('categories')\r\n\t\t\t\t.doc(id)\r\n\t\t\t\t.get();\r\n\t\t\tif (res.exists) {\r\n\t\t\t\treturn { success: true, data: { ...res.data(), id } };\r\n\t\t\t}\r\n\t\t\treturn { success: false, e: { message: 'Not Found' } };\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false, e };\r\n\t\t}\r\n\t},\r\n\tinsert: async data => {\r\n\t\ttry {\r\n\t\t\tconst res = await db.collection('categories').add(\r\n\t\t\t\tJSON.parse(\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\tcreateAt: new Date().getTime(),\r\n\t\t\t\t\t\tupdateAt: new Date().getTime(),\r\n\t\t\t\t\t\tactive: true,\r\n\t\t\t\t\t\ttotal: 0\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\treturn { success: true, data: { id: res.id } };\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false, e };\r\n\t\t}\r\n\t},\r\n\tupdate: async (id, data) => {\r\n\t\ttry {\r\n\t\t\tawait db\r\n\t\t\t\t.collection('categories')\r\n\t\t\t\t.doc(id)\r\n\t\t\t\t.update(\r\n\t\t\t\t\tJSON.parse(\r\n\t\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\t\tupdateAt: new Date().getTime()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\treturn { success: true };\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false, e };\r\n\t\t}\r\n\t},\r\n\tremove: async id => {\r\n\t\ttry {\r\n\t\t\tawait db\r\n\t\t\t\t.collection('categories')\r\n\t\t\t\t.doc(id)\r\n\t\t\t\t.update({ active: false });\r\n\t\t\treturn { success: true, data: { id } };\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false, e };\r\n\t\t}\r\n\t}\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Table, Tag, message } from \"antd\";\r\nimport \"./Files.scss\";\r\nimport { useEffect } from \"react\";\r\nconst Files = props => {\r\n    const [files, setFiles] = useState([]);\r\n    const onChange = e => {\r\n        const tmpFiles = Array.from(e.target.files);\r\n        let tmp = [];\r\n        tmpFiles.forEach(f => {\r\n            if (f.size <= 20 * 1024 * 1024) {\r\n                tmp.push(f);\r\n            }\r\n        });\r\n        if (tmp.length !== tmpFiles.length) {\r\n            message.warning(\r\n                \"Таны сонгосон зарим файлын хэмжээ 20mb аас их байна. Тийм учраас тухайн файлуудыг хасаж байна !\"\r\n            );\r\n        }\r\n        setFiles([...files, ...tmp]);\r\n    };\r\n\r\n    const remove = i => {\r\n        let tmp = [...files];\r\n        tmp.splice(i, 1);\r\n        setFiles(tmp);\r\n    };\r\n\r\n    function humanFileSize(size) {\r\n        if (size < 1024) return size + \" B\";\r\n        let i = Math.floor(Math.log(size) / Math.log(1024));\r\n        let num = size / Math.pow(1024, i);\r\n        let round = Math.round(num);\r\n        num =\r\n            round < 10 ? num.toFixed(2) : round < 100 ? num.toFixed(1) : round;\r\n        return `${num} ${\"KMGTPEZY\"[i - 1]}B`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.onChange(files);\r\n    }, [files]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValue && props.initialValue.length > 0) {\r\n            setFiles(props.initialValue);\r\n        }\r\n    }, [props.initialValue]);\r\n\r\n    return (\r\n        <section className=\"comp-files\">\r\n            <label htmlFor=\"files\" className=\"ant-btn ant-btn-lg\">\r\n                Файл хуулах\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                id=\"files\"\r\n                name=\"files\"\r\n                onChange={onChange}\r\n                multiple={true}\r\n                accept={\r\n                    \"application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,text/plain, application/pdf, image/*, .xlsx,.xls,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                }\r\n            />\r\n            <Table\r\n                pagination={false}\r\n                dataSource={files.map((file, i) => ({ i, file }))}\r\n                columns={[\r\n                    {\r\n                        title: \"Нэр\",\r\n                        key: \"name\",\r\n                        render: ({ file }) => {\r\n                            return file.name;\r\n                        }\r\n                    },\r\n                    {\r\n                        title: \"Төрөл\",\r\n                        key: \"type\",\r\n                        render: ({ file }) => {\r\n                            return <Tag>{file.type}</Tag>;\r\n                        }\r\n                    },\r\n                    {\r\n                        title: \"Хэмжээ\",\r\n                        key: \"size\",\r\n                        render: ({ file }) => {\r\n                            return <code>{humanFileSize(file.size)}</code>;\r\n                        }\r\n                    },\r\n                    {\r\n                        title: \"\",\r\n                        key: \"actions\",\r\n                        render: r => {\r\n                            return (\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type=\"danger\"\r\n                                    onClick={e => remove(r.i)}\r\n                                >\r\n                                    Устгах\r\n                                </Button>\r\n                            );\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Files;\r\n","import { storage } from \"./firebase\";\r\nimport { message } from \"antd\";\r\nexport default {\r\n    upload: (file, uploadDirectory) => {\r\n        return new Promise((resolve, reject) => {\r\n            let metadata = {\r\n                cacheControl: \"public, max-age=31536000\",\r\n            };\r\n\r\n            const storageRef = storage;\r\n            const fileUpload = storageRef\r\n                .child(\r\n                    `${uploadDirectory}/${new Date().getTime()}_${file.name}`\r\n                )\r\n                .put(file, { ...metadata, contentType: file.type });\r\n\r\n            fileUpload.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                    var progress =\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log(\"Upload is \" + progress + \"% done\");\r\n\r\n                    // if (cb && index !== false) {\r\n                    //     cb(index, progress);\r\n                    // }\r\n\r\n                    let tmp = message.loading({\r\n                        content: `${file.name} файлыг ${Math.floor(\r\n                            progress\r\n                        )}% тай хуулж байна.`,\r\n                        key: file.name,\r\n                    });\r\n                    if (progress === 100) {\r\n                        tmp();\r\n                    }\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                },\r\n                () => {\r\n                    fileUpload.snapshot.ref\r\n                        .getDownloadURL()\r\n                        .then((downloadURL) => {\r\n                            resolve(downloadURL);\r\n                        });\r\n                }\r\n            );\r\n        });\r\n    },\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    message,\r\n    Card,\r\n    Divider,\r\n    Row,\r\n    Col,\r\n    Select,\r\n    Spin,\r\n    Icon\r\n} from \"antd\";\r\nimport api from \"../api/courses\";\r\nimport apiClass from \"../api/class\";\r\nimport apiCategories from \"../api/categories\";\r\nimport BD from \"../bd/BD\";\r\nimport Files from \"../files/Files\";\r\nimport file from \"../api/file\";\r\nconst CreateCourse = props => {\r\n    const { id } = props.match.params;\r\n    const [classes, setClasses] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [data, setData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            const [resClasses, resCategories] = await Promise.all([\r\n                apiClass.find(),\r\n                apiCategories.find()\r\n            ]);\r\n            if (resClasses.success && resCategories.success) {\r\n                setClasses(resClasses.data);\r\n                setCategories(resCategories.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        fetch();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetch = async id => {\r\n            const res = await api.findOne(id);\r\n            if (res.success) {\r\n                setData(res.data);\r\n                setFiles(res.data.files || []);\r\n            } else {\r\n                props.history.replace(\"/dashboard/courses\");\r\n            }\r\n        };\r\n        id && fetch(id);\r\n    }, [id]);\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        props.form.validateFields(async (e, form) => {\r\n            if (!e) {\r\n                setLoading(true);\r\n\r\n                const uploadFiles = [];\r\n\r\n                files.forEach(f => {\r\n                    uploadFiles.push(\r\n                        f.url\r\n                            ? Promise.resolve(f.url)\r\n                            : file.upload(f, \"/ecourse\")\r\n                    );\r\n                });\r\n                const tmpFiles = await Promise.all(uploadFiles);\r\n                const tmpData = {\r\n                    ...form,\r\n                    files: tmpFiles.map((url, i) => ({\r\n                        url,\r\n                        name: files[i].name,\r\n                        size: files[i].size,\r\n                        type: files[i].type\r\n                    }))\r\n                };\r\n                const res = await (id\r\n                    ? api.update(id, { ...data, ...tmpData })\r\n                    : api.insert(tmpData));\r\n                if (res.success) {\r\n                    message.success(\r\n                        id ? \"Амжилттай засагдлаа !\" : \"Амжилттай нэмэгдлээ\"\r\n                    );\r\n                    props.history.replace(\"/dashboard/courses\");\r\n                } else {\r\n                    message.warn(\"Алдаа гарлаа !\");\r\n                    console.log(\"CUSTOM ERROR: \", res);\r\n                }\r\n                setLoading(false);\r\n            } else {\r\n                message.warn(\"Форм гүйцэт бөглөгдөөгүй байна !!!\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <main className=\"page-course\">\r\n            <BD\r\n                title={data ? \"Хичээл засах\" : \"Хичээл нэмэх\"}\r\n                links={[\r\n                    {\r\n                        title: \"Хичээлийн жагсаалт\",\r\n                        url: \"/dashboard/courses\"\r\n                    },\r\n                    {\r\n                        title: data ? \"Хичээл засах\" : \"Хичээл нэмэх\"\r\n                    }\r\n                ]}\r\n            />\r\n\r\n            <Spin spinning={loading} indicator={<Icon type=\"loading\" spin />}>\r\n                <Card>\r\n                    <Form onSubmit={submit}>\r\n                        <Form.Item label=\"Категори\">\r\n                            {getFieldDecorator(\"category\", {\r\n                                rules: [{ required: true }],\r\n                                initialValue:\r\n                                    (data && data.category) || undefined\r\n                            })(\r\n                                <Select>\r\n                                    {categories.map(c => (\r\n                                        <Select.Option key={c.id} value={c.id}>\r\n                                            {c.name}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Анги\">\r\n                            {getFieldDecorator(\"class\", {\r\n                                rules: [{ required: true }],\r\n                                initialValue: (data && data.class) || undefined\r\n                            })(\r\n                                <Select>\r\n                                    {classes.map(c => (\r\n                                        <Select.Option key={c.id} value={c.id}>\r\n                                            {c.name}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Гарчиг\">\r\n                            {getFieldDecorator(\"name\", {\r\n                                rules: [{ required: true }],\r\n                                initialValue: (data && data.name) || undefined\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Тайлбар\">\r\n                            {getFieldDecorator(\"desc\", {\r\n                                rules: [],\r\n                                initialValue: (data && data.desc) || undefined\r\n                            })(<Input.TextArea />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Видео URL\">\r\n                            {getFieldDecorator(\"videoURL\", {\r\n                                rules: [{ required: true }],\r\n                                initialValue:\r\n                                    (data && data.videoURL) || undefined\r\n                            })(\r\n                                <Input placeholder=\"https://www.youtube.com/watch?v=xdYFuCp3m9k&list=RDxdYFuCp3m9k\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Хичээлтэй холбоотой файлууд\">\r\n                            <Files\r\n                                onChange={setFiles}\r\n                                initialValue={(data && data.files) || []}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Divider />\r\n                        <Form.Item className=\"text-right\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"large\"\r\n                                style={{ width: 200 }}\r\n                                htmlType=\"submit\"\r\n                            >\r\n                                {id ? \"Засах\" : \"Нэмэх\"}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Spin>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Form.create({ name: \"CreateCourse\" })(CreateCourse);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button, Row, Col } from \"antd\";\r\nimport api from \"../api/class\";\r\nimport BD from \"../bd/BD\";\r\n\r\nconst Class = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const colums = [\r\n    {\r\n      title: \"Нэр\",\r\n      dataIndex: \"name\",\r\n      key: \"name\"\r\n    },\r\n    {\r\n      title: \"Тайлбар\",\r\n      dataIndex: \"desc\",\r\n      key: \"desc\"\r\n    },\r\n    {\r\n      title: \"\",\r\n      key: \"actions\",\r\n      width: 250,\r\n      render: () => {\r\n        return (\r\n          <Row gutter={20} type=\"flex\" align=\"middle\" justify=\"end\">\r\n            <Col span={10}>\r\n              <Button block size=\"small\">\r\n                Засах\r\n              </Button>\r\n            </Col>\r\n            <Col span={2} className=\"text-center\">\r\n              |\r\n            </Col>\r\n            <Col span={10}>\r\n              <Button type=\"danger\" block size=\"small\">\r\n                Устгах\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setLoading(true);\r\n      const res = await api.find();\r\n      if (res.success) {\r\n        setData(res.data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"page-class\">\r\n      <BD\r\n        title=\"Ангийн Жагсаалт\"\r\n        links={[\r\n          {\r\n            title: \"Ангийн жагсаалт\"\r\n          }\r\n        ]}\r\n        suffix={\r\n          <Link to={\"/dashboard/class/create\"}>\r\n            <Button className=\"primary\">Нэмэх</Button>\r\n          </Link>\r\n        }\r\n      />\r\n      <Table dataSource={data} columns={colums} loading={loading} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button, Row, Col, Modal } from \"antd\";\r\nimport api from \"../api/categories\";\r\nimport BD from \"../bd/BD\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Categories = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const remove = (i, id) => {\r\n        confirm({\r\n            title: \"Устгахдаа итгэлтэй байна уу ?\",\r\n            content: data[i].name,\r\n            okText: \"Тийм\",\r\n            okType: \"danger\",\r\n            cancelText: \"Үгүй\",\r\n            async onOk() {\r\n                await api.remove(id);\r\n                fetch();\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const colums = [\r\n        {\r\n            title: \"Нэр\",\r\n            dataIndex: \"name\",\r\n            key: \"name\"\r\n        },\r\n        {\r\n            title: \"Тайлбар\",\r\n            dataIndex: \"desc\",\r\n            key: \"desc\"\r\n        },\r\n        {\r\n            title: \"\",\r\n            key: \"actions\",\r\n            width: 250,\r\n            render: r => {\r\n                return (\r\n                    <Row gutter={20} type=\"flex\" align=\"middle\" justify=\"end\">\r\n                        <Col span={10}>\r\n                            <Link to={`/dashboard/categories/${r.id}`}>\r\n                                <Button block size=\"small\">\r\n                                    Засах\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={2} className=\"text-center\">\r\n                            |\r\n                        </Col>\r\n                        <Col span={10}>\r\n                            <Button\r\n                                type=\"danger\"\r\n                                block\r\n                                size=\"small\"\r\n                                onClick={() => remove(r.i, r.id)}\r\n                            >\r\n                                Устгах\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n\r\n    const fetch = async () => {\r\n        setLoading(true);\r\n        const res = await api.find();\r\n        if (res.success) {\r\n            setData(res.data);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch();\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"page-class\">\r\n            <BD\r\n                title=\"Категори\"\r\n                links={[\r\n                    {\r\n                        title: \"Категори\"\r\n                    }\r\n                ]}\r\n                suffix={\r\n                    <Link to={\"/dashboard/categories/create\"}>\r\n                        <Button className=\"primary\">Нэмэх</Button>\r\n                    </Link>\r\n                }\r\n            />\r\n            <Table\r\n                dataSource={data.map((d, i) => ({ i, ...d }))}\r\n                columns={colums}\r\n                loading={loading}\r\n            />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, message, Card, Divider, Icon, Spin } from \"antd\";\r\nimport api from \"../api/categories\";\r\nimport BD from \"../bd/BD\";\r\n\r\nconst CreateCategory = props => {\r\n    const [data, setData] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        props.form.validateFields(async (e, form) => {\r\n            if (!e) {\r\n                setLoading(true);\r\n                const res = await (id\r\n                    ? api.update(id, { ...data, ...form })\r\n                    : api.insert(form));\r\n                if (res.success) {\r\n                    props.history.replace(\"/dashboard/categories\");\r\n                } else {\r\n                    message.warn(\"Алдаа гарлаа !\");\r\n                    console.log(\"CUSTOM ERROR: \", res);\r\n                }\r\n            } else {\r\n                message.warn(\"Форм гүйцэт бөглөгдөөгүй байна !!!\");\r\n            }\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n    const { id } = props.match.params;\r\n    useEffect(() => {\r\n        const fetch = async id => {\r\n            setLoading(true);\r\n            const res = await api.findOne(id);\r\n            if (res.success) {\r\n                setData(res.data);\r\n            } else {\r\n                props.history.replace(\"/dashboard/categories\");\r\n            }\r\n            setLoading(false);\r\n        };\r\n        id && fetch(id);\r\n    }, [id]);\r\n\r\n    return (\r\n        <main className=\"page-course\">\r\n            <BD\r\n                title={id ? \"Категори засах\" : \"Категори нэмэх\"}\r\n                links={[\r\n                    {\r\n                        title: \"Категори\",\r\n                        url: \"/dashboard/categories\"\r\n                    },\r\n                    {\r\n                        title: id ? \"Категори засах\" : \"Категори нэмэх\"\r\n                    }\r\n                ]}\r\n            />\r\n\r\n            <Spin spinning={loading} indicator={<Icon type=\"loading\" spin />}>\r\n                <Card>\r\n                    <Form onSubmit={submit}>\r\n                        <Form.Item label=\"Нэр\">\r\n                            {getFieldDecorator(\"name\", {\r\n                                rules: [{ required: true }],\r\n                                initialValue: (data && data.name) || undefined\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Тайлбар\">\r\n                            {getFieldDecorator(\"desc\", {\r\n                                rules: [{ required: false }],\r\n                                initialValue: (data && data.desc) || undefined\r\n                            })(<Input.TextArea />)}\r\n                        </Form.Item>\r\n                        <Divider />\r\n                        <Form.Item className=\"text-right\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"large\"\r\n                                style={{ width: 200 }}\r\n                                htmlType=\"submit\"\r\n                            >\r\n                                {id ? \"Засах\" : \"Нэмэх\"}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Spin>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Form.create({ name: \"CreateCategory\" })(CreateCategory);\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Card, Divider, Row, Col } from \"antd\";\r\nimport api from \"../api/class\";\r\nimport BD from \"../bd/BD\";\r\nconst CreateClass = props => {\r\n  const {} = props.form;\r\n\r\n  const submit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFields(async (e, form) => {\r\n      if (!e) {\r\n        const res = await api.insert(form);\r\n        if (res.success) {\r\n          props.history.replace(\"/dashboard/class\");\r\n        } else {\r\n          message.warn(\"Алдаа гарлаа !\");\r\n          console.log(\"CUSTOM ERROR: \", res);\r\n        }\r\n      } else {\r\n        message.warn(\"Форм гүйцэт бөглөгдөөгүй байна !!!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getFieldDecorator } = props.form;\r\n\r\n  return (\r\n    <main className=\"page-course\">\r\n      <BD\r\n        title=\"Анги нэмэх\"\r\n        links={[\r\n          {\r\n            title: \"Ангийн жагсаалт\",\r\n            url: \"/dashboard/class\"\r\n          },\r\n          {\r\n            title: \"Анги нэмэх\"\r\n          }\r\n        ]}\r\n      />\r\n      <Card>\r\n        <Form onSubmit={submit}>\r\n          <Form.Item label=\"Нэр\">\r\n            {getFieldDecorator(\"name\", { rules: [{ required: true }] })(\r\n              <Input />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"Тайлбар\">\r\n            {getFieldDecorator(\"desc\", { rules: [] })(<Input.TextArea />)}\r\n          </Form.Item>\r\n\r\n          <Divider />\r\n          <Form.Item className=\"text-right\">\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              style={{ width: 200 }}\r\n              htmlType=\"submit\"\r\n            >\r\n              Нэмэх\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Form.create({ name: \"CreateClass\" })(CreateClass);\r\n","import { firebase } from './firebase';\r\n\r\nexport default {\r\n\tlogin: async (email, password) => {\r\n\t\ttry {\r\n\t\t\tawait firebase.auth().signInWithEmailAndPassword(email, password);\r\n\t\t\treturn { success: true };\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false, e };\r\n\t\t}\r\n\t},\r\n\r\n\tlogout: async () => {\r\n\t\ttry {\r\n\t\t\tawait firebase.auth().signOut();\r\n\t\t\treturn { success: true };\r\n\t\t} catch (e) {\r\n\t\t\treturn { success: false };\r\n\t\t}\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport { Card, Form, Radio, InputNumber, Row, Col, Button, Input } from \"antd\";\r\n\r\nconst Answer = (props) => {\r\n    const { data } = props;\r\n    const { getFieldDecorator, getFieldValue } = props.form;\r\n\r\n    console.log(\"ANSWER: \", data);\r\n\r\n    const renderAnswers = (total) => {\r\n        const abc = [\r\n            \"a\",\r\n            \"b\",\r\n            \"c\",\r\n            \"d\",\r\n            \"e\",\r\n            \"f\",\r\n            \"g\",\r\n            \"h\",\r\n            \"i\",\r\n            \"j\",\r\n            \"k\",\r\n            \"l\",\r\n            \"m\",\r\n        ];\r\n\r\n        return abc\r\n            .filter((a, i) => i < total)\r\n            .map((a, i) => (\r\n                <Form.Item\r\n                    label={a}\r\n                    {...{\r\n                        labelCol: { span: 4 },\r\n                        wrapperCol: { span: 20 },\r\n                    }}\r\n                >\r\n                    {getFieldDecorator(\r\n                        `${props.slug}[${props.id}].answers.${i}`,\r\n                        {\r\n                            rules: [{ required: true }],\r\n                            initialValue:\r\n                                (data && data.answers && data.answers[i]) ||\r\n                                undefined,\r\n                        }\r\n                    )(<Input />)}\r\n                </Form.Item>\r\n            ));\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            title={`Асуулт:${props.sectionId}-${props.id + 1}`}\r\n            style={{ marginBottom: 20 }}\r\n            extra={\r\n                <Button\r\n                    size=\"small\"\r\n                    type=\"danger\"\r\n                    icon=\"close\"\r\n                    onClick={props.remove}\r\n                ></Button>\r\n            }\r\n        >\r\n            <Row gutter={20}>\r\n                <Col span={12}>\r\n                    <Form.Item label=\"Төрөл\">\r\n                        {getFieldDecorator(`${props.slug}[${props.id}].type`, {\r\n                            rules: [{ required: true }],\r\n                            initialValue: data.type || props.type,\r\n                        })(\r\n                            <Radio.Group>\r\n                                <Radio value={1}>abc - сонгох</Radio>\r\n                                <Radio value={2}>123 - сонгох</Radio>\r\n                                <Radio value={3}>a=[ * ] - нөхөх</Radio>\r\n                                <Radio value={4}>a x 1 - холбох</Radio>\r\n                            </Radio.Group>\r\n                        )}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Form.Item label=\"Нийт сонголт\">\r\n                        {getFieldDecorator(\r\n                            `${props.slug}[${props.id}].totalChoice`,\r\n                            {\r\n                                rules: [{ required: true }],\r\n                                initialValue: data.totalChoice || 8,\r\n                            }\r\n                        )(<InputNumber style={{ width: \"100%\" }} />)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Form.Item label=\"Зөв хариулт\" required>\r\n                        {getFieldValue(`${props.slug}[${props.id}].type`) ===\r\n                            3 ||\r\n                        getFieldValue(`${props.slug}[${props.id}].type`) === 4\r\n                            ? renderAnswers(\r\n                                  getFieldValue(\r\n                                      `${props.slug}[${props.id}].totalChoice`\r\n                                  )\r\n                              )\r\n                            : getFieldDecorator(\r\n                                  `${props.slug}[${props.id}].answer`,\r\n                                  {\r\n                                      rules: [{ required: true }],\r\n                                      initialValue: data.answer || undefined,\r\n                                  }\r\n                              )(<InputNumber style={{ width: \"100%\" }} />)}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Answer;\r\n","import React from \"react\";\r\nimport { Divider, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Test = (props) => {\r\n    const { data } = props;\r\n    const [sections, setSections] = useState([\r\n        { title: \"Сонгох Даалгавар\", answers: [0] },\r\n        { title: \"Нөхөх хэсэг\", answers: [0] },\r\n    ]);\r\n\r\n    const addSection = () => {\r\n        setSections([...sections, { title: \"Нөхөх хэсэг\", answers: [0] }]);\r\n    };\r\n\r\n    const removeSection = (sectionIndex) => {\r\n        let tmp = [...sections];\r\n        tmp.splice(sectionIndex, 1);\r\n        setSections(tmp);\r\n    };\r\n\r\n    const addAnswer = (sectionIndex) => {\r\n        let tmp = [...sections];\r\n        tmp[sectionIndex].answers.push(\r\n            tmp[sectionIndex].answers[tmp[sectionIndex].answers.length - 1] + 1\r\n        );\r\n        setSections(tmp);\r\n    };\r\n\r\n    const removeAnswer = (sectionIndex, answerIndex) => {\r\n        let tmp = [...sections];\r\n        tmp[sectionIndex].answers.splice(answerIndex, 1);\r\n        setSections(tmp);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"DATA: S\", data);\r\n        if (data && data.sections) {\r\n            let tmp = data.sections.map((s, i) => {\r\n                return {\r\n                    title: i === 0 ? \"Сонгох Даалгавар\" : \"Нөхөх хэсэг\",\r\n                    answers: s.questions,\r\n                };\r\n            });\r\n            setSections(tmp);\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <section className=\"comp-test\">\r\n            {sections.map((s, i) => (\r\n                <div key={`section-${i}`}>\r\n                    <Divider>\r\n                        {`${i + 1}-р хэсэг - ${s.title}`}{\" \"}\r\n                        {i !== 0 && (\r\n                            <Button\r\n                                type=\"danger\"\r\n                                size=\"small\"\r\n                                icon=\"close\"\r\n                                onClick={() => {\r\n                                    removeSection(i);\r\n                                }}\r\n                            ></Button>\r\n                        )}\r\n                    </Divider>\r\n                    {s.answers &&\r\n                        s.answers.map((a, j) => (\r\n                            <Answer\r\n                                sectionId={i + 1}\r\n                                id={j}\r\n                                key={`section-${i + 1}-answer-${j + 1}`}\r\n                                remove={() => removeAnswer(i, j)}\r\n                                type={1}\r\n                                form={props.form}\r\n                                slug={`versions[${props.id}].sections[${i}].questions`}\r\n                                data={\r\n                                    (data &&\r\n                                        data.sections &&\r\n                                        data.sections[i] &&\r\n                                        data.sections[i].questions[j]) ||\r\n                                    {}\r\n                                }\r\n                            />\r\n                        ))}\r\n\r\n                    <Button\r\n                        block\r\n                        size=\"large\"\r\n                        onClick={() => {\r\n                            addAnswer(i);\r\n                        }}\r\n                        type=\"dashed\"\r\n                        icon=\"plus\"\r\n                    >\r\n                        Нэмэх\r\n                    </Button>\r\n                </div>\r\n            ))}\r\n\r\n            <Divider />\r\n\r\n            <Button size=\"large\" block onClick={addSection}>\r\n                Хэсэг Нэмэх\r\n            </Button>\r\n\r\n            {/* <Divider>НЭГДҮГЭЭР ХЭСЭГ. СОНГОХ ДААЛГАВАР</Divider>\r\n            {answers.map((a, i) => (\r\n                <Answer\r\n                    id={i + 1}\r\n                    key={`${id}-answer-${i + 1}`}\r\n                    remove={() => removeAnswer(i)}\r\n                    type={1}\r\n                    form={props.form}\r\n                    index={props.index}\r\n                    slug={`version[${props.id}].section1`}\r\n                />\r\n            ))}\r\n            <Button\r\n                block\r\n                size=\"large\"\r\n                onClick={() =>\r\n                    setAnswers([...answers, answers[answers.length - 1] + 1])\r\n                }\r\n                type=\"dashed\"\r\n                icon=\"plus\"\r\n            >\r\n                Нэмэх\r\n            </Button>\r\n            <Divider>ХОЁРДУГААР ХЭСЭГ. НӨХӨХ ДААЛГАВАР</Divider>\r\n            {answers2.map((a, i) => (\r\n                <Answer\r\n                    id={`2-${i + 1}`}\r\n                    key={`${id}-answer-${i + 1}`}\r\n                    remove={() => removeAnswer2(i)}\r\n                    type={3}\r\n                    form={props.form}\r\n                    index={props.index}\r\n                    slug={`version[${props.id}].section2`}\r\n                />\r\n            ))}\r\n            <Button\r\n                block\r\n                size=\"large\"\r\n                onClick={() =>\r\n                    setAnswers2([\r\n                        ...answers2,\r\n                        answers2[answers2.length - 1] + 1\r\n                    ])\r\n                }\r\n                type=\"dashed\"\r\n                icon=\"plus\"\r\n            >\r\n                Нэмэх\r\n            </Button> */}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","import { db } from \"./firebase\";\r\nexport default {\r\n    find: async () => {\r\n        try {\r\n            const res = await db\r\n                .collection(\"eec\")\r\n                .where(\"active\", \"==\", true)\r\n                .orderBy(\"year\", \"asc\")\r\n                .get();\r\n            return {\r\n                success: true,\r\n                data: res.docs.map((d) => ({ id: d.id, ...d.data() })),\r\n            };\r\n        } catch (e) {\r\n            console.log(e);\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    findOne: async (id) => {\r\n        try {\r\n            const res = await db.collection(\"eec\").doc(id).get();\r\n            if (res.exists) {\r\n                return { success: true, data: { ...res.data(), id } };\r\n            }\r\n            return { success: false, e: { message: \"Not Found\" } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    insert: async (data) => {\r\n        try {\r\n            const res = await db.collection(\"eec\").add(\r\n                JSON.parse(\r\n                    JSON.stringify({\r\n                        ...data,\r\n                        year: Number.parseInt(data.year, 10),\r\n                        createAt: new Date().getTime(),\r\n                        updateAt: new Date().getTime(),\r\n                        active: true,\r\n                    })\r\n                )\r\n            );\r\n            return { success: true, data: { id: res.id } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    update: async (id, data) => {\r\n        try {\r\n            await db\r\n                .collection(\"eec\")\r\n                .doc(id)\r\n                .set(\r\n                    JSON.parse(\r\n                        JSON.stringify({\r\n                            ...data,\r\n                            ...(data.year\r\n                                ? { year: Number.parseInt(data.year) }\r\n                                : {}),\r\n                            updateAt: new Date().getTime(),\r\n                        })\r\n                    ),\r\n                    { merge: true }\r\n                );\r\n            return { success: true };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n    remove: async (id) => {\r\n        try {\r\n            await db.collection(\"eec\").doc(id).update({ active: false });\r\n            return { success: true, data: { id } };\r\n        } catch (e) {\r\n            return { success: false, e };\r\n        }\r\n    },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Tabs,\r\n    Button,\r\n    message,\r\n    Card,\r\n    Divider,\r\n    Form,\r\n    Input,\r\n    Select,\r\n} from \"antd\";\r\nimport Test from \"./Test\";\r\nimport apiCategories from \"../api/categories\";\r\nimport apiFile from \"../api/file\";\r\nimport api from \"../api/eec\";\r\nimport BD from \"../bd/BD\";\r\nimport \"./Eec.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst V = { 0: \"a\", 1: \"b\", 2: \"c\", 3: \"d\", 4: \"e\", 5: \"f\", 6: \"g\" };\r\n\r\nconst Eec = (props) => {\r\n    const { id } = props.match.params;\r\n    const [versions, setVersions] = useState([\r\n        {\r\n            id: V[\"0\"],\r\n        },\r\n    ]);\r\n    const [current, setCurrent] = useState(V[\"0\"]);\r\n\r\n    const addVersion = () => {\r\n        if (Object.keys(V).length > versions.length) {\r\n            setVersions([...versions, { id: V[`${versions.length}`] }]);\r\n        } else {\r\n            message.warn(\"G гээс дээшээ нэмэх боломжгүй!\");\r\n        }\r\n    };\r\n\r\n    const onEdit = (key) => {\r\n        if (key === V[\"0\"]) {\r\n            message.warn(\"Заавал A хувилбар байх ёстой!\");\r\n        } else {\r\n            if (key === current) setCurrent(V[\"0\"]);\r\n            setVersions(versions.filter((v) => v.id !== key));\r\n        }\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    const submit = () => {\r\n        props.form.validateFields(async (e, form) => {\r\n            if (!e) {\r\n                setLoading(true);\r\n                if (pdf) {\r\n                    const pdfURL = await apiFile.upload(\r\n                        pdf,\r\n                        `/eec/${form.category}/${form.year}`\r\n                    );\r\n\r\n                    form.versions[current].file = pdfURL;\r\n                }\r\n\r\n                let tmpVersions = { [current]: form.versions[current] };\r\n                form.versions = tmpVersions;\r\n\r\n                const res = await (id\r\n                    ? api.update(id, { ...form })\r\n                    : api.insert({ ...form }));\r\n                if (res.success) {\r\n                    message.success(\"Амжилттай хадгалагдлаа\");\r\n                    if (!id) {\r\n                        const { data } = res;\r\n                        props.history.replace(\r\n                            `/dashboard/eec/create/${data.id}`\r\n                        );\r\n                    }\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    console.log(\"CUSTOM ERROR: \", res);\r\n                }\r\n                setLoading(false);\r\n            } else {\r\n                console.log(\"ERROR: \", e);\r\n                message.warn(\"Форм бөглөгдөөгүй үлдсэн талбар байна !!!\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 4 },\r\n        },\r\n        wrapperCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 8 },\r\n        },\r\n    };\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            const res = await apiCategories.find();\r\n            if (res.success) {\r\n                setCategories(res.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        fetch();\r\n    }, []);\r\n\r\n    const [data, setData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const fetch = async () => {\r\n                setLoading(true);\r\n                const res = await api.findOne(id);\r\n                if (res.success) {\r\n                    setData(res.data);\r\n                }\r\n                setLoading(false);\r\n            };\r\n            fetch();\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        const { versions } = data;\r\n        console.log(\"DATA: \", data);\r\n        if (versions) {\r\n            setVersions(\r\n                Object.keys(versions).map((id) => {\r\n                    return { ...versions[id], id };\r\n                })\r\n            );\r\n            props.form.setFieldsValue(data);\r\n        }\r\n    }, [data]);\r\n\r\n    const [pdf, setPDF] = useState(false);\r\n\r\n    return (\r\n        <main className=\"page-eec\">\r\n            <BD\r\n                title=\"ЭЕШ Шалгалтын материал\"\r\n                links={[\r\n                    {\r\n                        title: \"ЭЕШ Жагсаалт\",\r\n                        url: \"/dashboard/eec\",\r\n                    },\r\n                    {\r\n                        title: \"ЭЕШ Шалгалтын материал\",\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <Card>\r\n                <Button onClick={addVersion}>Вариант нэмэх</Button>\r\n                <Divider />\r\n                <Form.Item label=\"Хичээл\" {...formItemLayout}>\r\n                    {getFieldDecorator(\"category\", {\r\n                        rules: [{ required: true }],\r\n                        initialValue: undefined,\r\n                    })(\r\n                        <Select style={{ width: \"100%\" }} size=\"large\">\r\n                            {categories.map((c) => (\r\n                                <Select.Option key={c.name} value={c.name}>\r\n                                    {c.name}\r\n                                </Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Он\" {...formItemLayout}>\r\n                    {getFieldDecorator(`year`, {\r\n                        rules: [{ required: true }],\r\n                        initialValue: undefined,\r\n                    })(<Input type=\"number\" size=\"large\" />)}\r\n                </Form.Item>\r\n                <Divider />\r\n                <Tabs\r\n                    activeKey={current}\r\n                    type=\"editable-card\"\r\n                    onChange={setCurrent}\r\n                    hideAdd\r\n                    onEdit={onEdit}\r\n                >\r\n                    {versions.map((v, i) => (\r\n                        <TabPane\r\n                            tab={\r\n                                <>\r\n                                    Хувилбар{\" \"}\r\n                                    <b style={{ textTransform: \"uppercase\" }}>\r\n                                        {v.id}\r\n                                    </b>\r\n                                </>\r\n                            }\r\n                            key={`${v.id}`}\r\n                        >\r\n                            <Form.Item {...formItemLayout} label=\"PDF - Файл\">\r\n                                {getFieldDecorator(`versions.${v.id}.file`, {\r\n                                    rules: [{ required: true }],\r\n                                })(<input type=\"hidden\" />)}\r\n\r\n                                {data &&\r\n                                    data.versions &&\r\n                                    data.versions[v.id] &&\r\n                                    data.versions[v.id].file && (\r\n                                        <a\r\n                                            href={data.versions[v.id].file}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            PDF Файл Харах\r\n                                        </a>\r\n                                    )}\r\n\r\n                                <Input\r\n                                    type=\"file\"\r\n                                    size=\"large\"\r\n                                    multiple={false}\r\n                                    accept=\"application/pdf\"\r\n                                    onChange={(e) => {\r\n                                        const [file] = e.target.files;\r\n                                        setPDF(file);\r\n                                        props.form.setFieldsValue({\r\n                                            [`versions.${v.id}.file`]: file,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Test\r\n                                id={v.id}\r\n                                form={props.form}\r\n                                index={i}\r\n                                data={\r\n                                    (data &&\r\n                                        data.versions &&\r\n                                        data.versions[v.id]) ||\r\n                                    {}\r\n                                }\r\n                            />\r\n                        </TabPane>\r\n                    ))}\r\n                </Tabs>\r\n                <Divider />\r\n                <Button\r\n                    size=\"large\"\r\n                    block\r\n                    type=\"primary\"\r\n                    icon=\"save\"\r\n                    onClick={submit}\r\n                    loading={loading}\r\n                >\r\n                    Хадгалах\r\n                </Button>\r\n            </Card>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Form.create({ name: \"Eec\" })(Eec);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button, Row, Col, Tag } from \"antd\";\r\nimport api from \"../api/eec\";\r\nimport BD from \"../bd/BD\";\r\n\r\nconst List = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const colums = [\r\n        {\r\n            title: \"Хичээл\",\r\n            dataIndex: \"category\",\r\n            key: \"category\",\r\n        },\r\n        {\r\n            title: \"Он\",\r\n            dataIndex: \"year\",\r\n            key: \"year\",\r\n        },\r\n        {\r\n            title: \"Хувилбар\",\r\n            key: \"versions\",\r\n            render: (r) => {\r\n                return Object.keys(r.versions).map((v) => (\r\n                    <Tag>{v.toUpperCase()}</Tag>\r\n                ));\r\n            },\r\n        },\r\n        {\r\n            title: \"\",\r\n            key: \"actions\",\r\n            width: 250,\r\n            render: (r) => {\r\n                return (\r\n                    <Row gutter={20} type=\"flex\" align=\"middle\" justify=\"end\">\r\n                        <Col span={10}>\r\n                            <Link to={`/dashboard/eec/create/${r.id}`}>\r\n                                <Button block size=\"small\">\r\n                                    Засах\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={2} className=\"text-center\">\r\n                            |\r\n                        </Col>\r\n                        <Col span={10}>\r\n                            <Button type=\"danger\" block size=\"small\">\r\n                                Устгах\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            const res = await api.find();\r\n            if (res.success) {\r\n                setData(res.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        fetch();\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"page-class\">\r\n            <BD\r\n                title=\"ЭЕШ Жагсаалт\"\r\n                links={[\r\n                    {\r\n                        title: \"ЭЕШ жагсаалт\",\r\n                    },\r\n                ]}\r\n                suffix={\r\n                    <Link to={\"/dashboard/eec/create\"}>\r\n                        <Button className=\"primary\">Нэмэх</Button>\r\n                    </Link>\r\n                }\r\n            />\r\n            <Table dataSource={data} columns={colums} loading={loading} />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, Link, matchPath } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Courses from \"../courses/Courses\";\r\nimport CreateCourse from \"../create-course/CreateCourse\";\r\nimport Class from \"../class/Class\";\r\nimport Categories from \"../categories/Categories\";\r\nimport CreateCategory from \"../create-category/CreateCategory\";\r\nimport CreateClass from \"../create-class/CreateClass\";\r\nimport user from \"../api/user\";\r\nimport Eec from \"../eec/Eec\";\r\nimport EecList from \"../eec/List\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst Dashboard = (props) => {\r\n    const getSelected = (pathname) => {\r\n        if (\r\n            matchPath(pathname, {\r\n                path: \"/dashboard/courses\",\r\n                exact: false,\r\n                strict: false,\r\n            })\r\n        ) {\r\n            return [\"/dashboard/courses\"];\r\n        }\r\n\r\n        if (\r\n            matchPath(pathname, {\r\n                path: \"/dashboard/class\",\r\n                exact: false,\r\n                strict: false,\r\n            })\r\n        ) {\r\n            return [\"/dashboard/class\"];\r\n        }\r\n        if (\r\n            matchPath(pathname, {\r\n                path: \"/dashboard/categories\",\r\n                exact: false,\r\n                strict: false,\r\n            })\r\n        ) {\r\n            return [\"/dashboard/categories\"];\r\n        }\r\n\r\n        if (\r\n            matchPath(pathname, {\r\n                path: \"/dashboard/eec\",\r\n                exact: false,\r\n                strict: false,\r\n            })\r\n        ) {\r\n            return [\"/dashboard/eec\"];\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n            <Sider style={{ background: \"#fff\" }}>\r\n                <div style={{ margin: \"20px 0\" }}>\r\n                    <Link to={\"/\"} target=\"_blank\">\r\n                        <h1 className=\"text-center\">SANT - ECOURSE</h1>\r\n                    </Link>\r\n                </div>\r\n                <Menu\r\n                    theme=\"light\"\r\n                    defaultSelectedKeys={getSelected(props.location.pathname)}\r\n                    mode=\"inline\"\r\n                >\r\n                    <Menu.Item key=\"/dashboard/courses\">\r\n                        <Link to=\"/dashboard/courses\">\r\n                            <span>Хичээлийн жагсаалт</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/dashboard/categories\">\r\n                        <Link to=\"/dashboard/categories\">\r\n                            <span>Категори</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/dashboard/class\">\r\n                        <Link to=\"/dashboard/class\">\r\n                            <span>Ангийн жагсаалт</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"/dashboard/eec\">\r\n                        <Link to=\"/dashboard/eec\">\r\n                            <span>ЭЕШ</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        key=\"/dashboard/logout\"\r\n                        onClick={() => user.logout()}\r\n                    >\r\n                        <span style={{ color: \"#e74c3c\" }}>Гарах</span>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content>\r\n                    <Switch>\r\n                        <Route\r\n                            path={\"/dashboard/courses\"}\r\n                            component={Courses}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/courses/create\"}\r\n                            component={CreateCourse}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/courses/:id\"}\r\n                            component={CreateCourse}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/class\"}\r\n                            component={Class}\r\n                            exact\r\n                        />\r\n                        <Route\r\n                            path={\"/dashboard/class/create\"}\r\n                            component={CreateClass}\r\n                            exact\r\n                        />\r\n                        <Route\r\n                            path={\"/dashboard/categories/create\"}\r\n                            component={CreateCategory}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/categories/:id\"}\r\n                            component={CreateCategory}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/categories\"}\r\n                            component={Categories}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/eec\"}\r\n                            component={EecList}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path={\"/dashboard/eec/create/:id?\"}\r\n                            component={Eec}\r\n                            exact\r\n                        />\r\n\r\n                        <Redirect to={\"/dashboard/courses/create\"} />\r\n                    </Switch>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Link, matchPath, useLocation } from \"react-router-dom\";\r\nimport { Row, Col, Button, Divider } from \"antd\";\r\nimport \"./Header.scss\";\r\nconst Header = (props) => {\r\n    const location = useLocation();\r\n    const checkURL = (url) => {\r\n        return matchPath(location.pathname, {\r\n            path: url,\r\n            exact: true,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <section className=\"comp-header\">\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col span={20}>\r\n                    <Row gutter={20} type=\"flex\" align=\"middle\">\r\n                        <Col span={12}>\r\n                            <Link to={\"/\"}>\r\n                                <div className=\"logo\">\r\n                                    <img src={\"/logo.png\"} />\r\n                                    <span>/ Онлайн Хичээл</span>\r\n                                </div>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div className=\"header-menu text-right\">\r\n                                <Link to={\"/\"}>\r\n                                    <Button\r\n                                        type={\r\n                                            checkURL(\"/\") ? \"primary\" : \"dashed\"\r\n                                        }\r\n                                        size=\"large\"\r\n                                    >\r\n                                        Видео хичээл\r\n                                    </Button>\r\n                                </Link>\r\n                                <Link to={\"/eec\"}>\r\n                                    <Button\r\n                                        type={\r\n                                            checkURL(\"/eec\")\r\n                                                ? \"primary\"\r\n                                                : \"dashed\"\r\n                                        }\r\n                                        size=\"large\"\r\n                                    >\r\n                                        ЭЕШ -ын шалгалт\r\n                                    </Button>\r\n                                </Link>\r\n                                <Link to={\"/dashboard\"}>\r\n                                    <Button\r\n                                        type={\r\n                                            checkURL(\"/dashboard\")\r\n                                                ? \"primary\"\r\n                                                : \"dashed\"\r\n                                        }\r\n                                        size=\"large\"\r\n                                    >\r\n                                        Багшийн хэсэг\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider />\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Spin, Row, Col, Button, Tag, Icon } from \"antd\";\r\nimport \"./Home.scss\";\r\nimport Header from \"../header/Header\";\r\nimport api from \"../api/categories\";\r\nconst { Meta } = Card;\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            const res = await api.find();\r\n            if (res.success) {\r\n                setData(res.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        fetch();\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"page-home\">\r\n            <Header />\r\n            <Spin spinning={loading} indicator={<Icon type=\"loading\" spin />}>\r\n                <div className=\"home-content\">\r\n                    <Row type=\"flex\" justify=\"center\">\r\n                        <Col span={20}>\r\n                            <Row gutter={[20, 20]}>\r\n                                {data.map((d) => (\r\n                                    <Col xs={24} sm={12} md={8} lg={6}>\r\n                                        <Link to={`/subjects/${d.id}`}>\r\n                                            <Card\r\n                                                className=\"custom-card\"\r\n                                                hoverable\r\n                                                cover={\r\n                                                    <img\r\n                                                        alt={d.name}\r\n                                                        src={d.icon}\r\n                                                        className=\"c-card-cover\"\r\n                                                    />\r\n                                                }\r\n                                                actions={[\r\n                                                    <div\r\n                                                        style={{\r\n                                                            padding: \"0 10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <Row\r\n                                                            gutter={20}\r\n                                                            type=\"flex\"\r\n                                                            align=\"middle\"\r\n                                                        >\r\n                                                            <Col\r\n                                                                span={12}\r\n                                                                className=\"text-left\"\r\n                                                            >\r\n                                                                <Tag color=\"green\">\r\n                                                                    {d.total ||\r\n                                                                        0}\r\n                                                                </Tag>{\" \"}\r\n                                                                Хичээл\r\n                                                            </Col>\r\n                                                            <Col span={12}>\r\n                                                                <Link\r\n                                                                    to={`/subjects/${d.id}`}\r\n                                                                >\r\n                                                                    <Button\r\n                                                                        block\r\n                                                                    >\r\n                                                                        Дэлгэрэнгүй\r\n                                                                    </Button>\r\n                                                                </Link>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>,\r\n                                                ]}\r\n                                            >\r\n                                                {/* <Meta\r\n                                                title={d.name}\r\n                                                description=\"-----\"\r\n                                            /> */}\r\n                                            </Card>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Spin>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Card, message, Spin, Icon } from \"antd\";\r\nimport \"./Login.scss\";\r\nimport api from \"../api/user\";\r\nconst Login = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { getFieldDecorator } = props.form;\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields(async (e, form) => {\r\n            if (!e) {\r\n                setLoading(true);\r\n                const res = await api.login(form.email, form.password);\r\n                if (!res.success) {\r\n                    message.error(\"Нэр эсвэл нууц үг буруу байна !\");\r\n                }\r\n                setLoading(false);\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <main className=\"page-login\">\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col xs={20} md={6}>\r\n                    <Spin\r\n                        spinning={loading}\r\n                        indicator={<Icon type=\"loading\" spin />}\r\n                    >\r\n                        <Card\r\n                            cover={\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"center\",\r\n                                        padding: \"40px 20px 20px\",\r\n                                    }}\r\n                                >\r\n                                    <img src=\"/logo.png\" width=\"100\" />\r\n                                </div>\r\n                            }\r\n                        >\r\n                            <Form onClick={submit}>\r\n                                <Form.Item label=\"Цахим хаяг\">\r\n                                    {getFieldDecorator(\"email\", {\r\n                                        rules: [\r\n                                            { required: true },\r\n                                            { type: \"email\" },\r\n                                        ],\r\n                                    })(<Input size=\"large\" />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Нууц үг\">\r\n                                    {getFieldDecorator(\"password\", {\r\n                                        rules: [{ required: true }],\r\n                                    })(<Input.Password size=\"large\" />)}\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        block\r\n                                        size=\"large\"\r\n                                        htmlType=\"submit\"\r\n                                        loading={loading}\r\n                                    >\r\n                                        Нэвтрэх\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Card>\r\n                    </Spin>\r\n                </Col>\r\n            </Row>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Form.create({ name: \"Login\" })(Login);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Tag,\r\n    Button,\r\n    Card,\r\n    Spin,\r\n    Icon,\r\n    Divider,\r\n    Empty,\r\n    Modal,\r\n    Table,\r\n} from \"antd\";\r\nimport api from \"../api/categories\";\r\nimport apiClass from \"../api/class\";\r\nimport apiCourses from \"../api/courses\";\r\nimport \"./Subject.scss\";\r\nimport Header from \"../header/Header\";\r\nconst { Meta } = Card;\r\nconst Subject = (props) => {\r\n    const [d, setData] = useState(false);\r\n    const [classData, setClass] = useState(false);\r\n    const [courses, setCourses] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [current, setCurrent] = useState(false);\r\n\r\n    const { id } = props.match.params;\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            const [res, resClass, resCourses] = await Promise.all([\r\n                api.findOne(id),\r\n                apiClass.find(),\r\n                apiCourses.findBy(id),\r\n            ]);\r\n            if (res.success && resClass.success && resCourses.success) {\r\n                setData(res.data);\r\n                setClass(resClass.data);\r\n                setCourses(resCourses.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        id && fetch();\r\n    }, [id]);\r\n\r\n    const yp = (url) => {\r\n        var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n        var match = url.match(regExp);\r\n        return match && match[7].length == 11 ? match[7] : false;\r\n    };\r\n\r\n    const getClassName = (classId) => {\r\n        let tmp = \"\";\r\n        classData &&\r\n            classData.forEach((c) => {\r\n                if (c.id === classId) {\r\n                    tmp = c.name;\r\n                }\r\n            });\r\n        return tmp;\r\n    };\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [currentCourse, setCurrentCourse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!show) {\r\n            setCurrentCourse(false);\r\n        }\r\n    }, [show]);\r\n\r\n    useEffect(() => {\r\n        if (currentCourse) {\r\n            setShow(true);\r\n        }\r\n    }, [currentCourse]);\r\n\r\n    function humanFileSize(size) {\r\n        if (size < 1024) return size + \" B\";\r\n        let i = Math.floor(Math.log(size) / Math.log(1024));\r\n        let num = size / Math.pow(1024, i);\r\n        let round = Math.round(num);\r\n        num =\r\n            round < 10 ? num.toFixed(2) : round < 100 ? num.toFixed(1) : round;\r\n        return `${num} ${\"KMGTPEZY\"[i - 1]}B`;\r\n    }\r\n\r\n    return (\r\n        <main className=\"page-subject\">\r\n            <Modal\r\n                title={currentCourse && currentCourse.name}\r\n                visible={show}\r\n                footer={false}\r\n                onCancel={() => setShow(false)}\r\n                maskClosable={false}\r\n                className=\"custom-modal\"\r\n                width={\"80%\"}\r\n            >\r\n                {currentCourse && (\r\n                    <iframe\r\n                        width=\"100%\"\r\n                        height=\"652\"\r\n                        src={`https://www.youtube.com/embed/${yp(\r\n                            currentCourse.videoURL\r\n                        )}`}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                        className=\"modal-player\"\r\n                    ></iframe>\r\n                )}\r\n                <p>{(currentCourse && currentCourse.desc) || \"-\"}</p>\r\n                <Divider>Файлын жагсаалт</Divider>\r\n                <Table\r\n                    className=\"modal-files\"\r\n                    pagination={false}\r\n                    dataSource={(currentCourse && currentCourse.files) || []}\r\n                    columns={[\r\n                        {\r\n                            title: \"Нэр\",\r\n                            key: \"name\",\r\n                            render: (r) => {\r\n                                return (r && r.name) || \"-\";\r\n                            },\r\n                        },\r\n                        {\r\n                            title: \"Төрөл\",\r\n                            key: \"type\",\r\n                            width: 200,\r\n                            render: (r) => {\r\n                                return <Tag>{(r && r.type) || \"-\"}</Tag>;\r\n                            },\r\n                        },\r\n                        {\r\n                            title: \"Хэмжээ\",\r\n                            key: \"size\",\r\n                            width: 200,\r\n                            render: (r) => {\r\n                                return <code>{humanFileSize(r.size)}</code>;\r\n                            },\r\n                        },\r\n                        {\r\n                            title: \"\",\r\n                            key: \"actions\",\r\n                            width: 100,\r\n                            render: (r) => {\r\n                                return (\r\n                                    <a href={r.url} target=\"_blank\">\r\n                                        <Button size=\"small\" type=\"link\">\r\n                                            Татах\r\n                                        </Button>\r\n                                    </a>\r\n                                );\r\n                            },\r\n                        },\r\n                    ]}\r\n                />\r\n            </Modal>\r\n\r\n            <Header />\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col span={20}>\r\n                    <Row gutter={20}>\r\n                        <Col span={6}>\r\n                            <Spin\r\n                                spinning={loading}\r\n                                indicator={<Icon type=\"loading\" spin />}\r\n                            >\r\n                                <Card\r\n                                    className=\"custom-card\"\r\n                                    bordered={false}\r\n                                    cover={<img alt={d.name} src={d.icon} />}\r\n                                    actions={[\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"0 10px\",\r\n                                            }}\r\n                                        >\r\n                                            <Row\r\n                                                gutter={20}\r\n                                                type=\"flex\"\r\n                                                align=\"middle\"\r\n                                            >\r\n                                                <Col\r\n                                                    span={24}\r\n                                                    className=\"text-left\"\r\n                                                >\r\n                                                    <Tag color=\"green\">\r\n                                                        {d.total || 0}\r\n                                                    </Tag>{\" \"}\r\n                                                    Хичээл\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>,\r\n                                    ]}\r\n                                ></Card>\r\n                            </Spin>\r\n                            <Link to={\"/\"}>\r\n                                <div style={{ margin: \"20px 0\" }}>\r\n                                    <Button\r\n                                        block\r\n                                        icon=\"arrow-left\"\r\n                                        type=\"dashed\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        Буцах\r\n                                    </Button>\r\n                                </div>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={18}>\r\n                            <Spin\r\n                                spinning={loading}\r\n                                indicator={<Icon type=\"loading\" spin />}\r\n                            >\r\n                                <Row gutter={20}>\r\n                                    <Col span={4}>\r\n                                        <Button\r\n                                            type={\r\n                                                current === false\r\n                                                    ? \"primary\"\r\n                                                    : \"dashed\"\r\n                                            }\r\n                                            block\r\n                                            className=\"btn-class\"\r\n                                            onClick={() => setCurrent(false)}\r\n                                            size=\"large\"\r\n                                        >\r\n                                            Бүгд\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={20}>\r\n                                    {classData &&\r\n                                        classData.map((c, id) => (\r\n                                            <Col span={4}>\r\n                                                <Button\r\n                                                    type={\r\n                                                        c.id === current\r\n                                                            ? \"primary\"\r\n                                                            : \"default\"\r\n                                                    }\r\n                                                    block\r\n                                                    className=\"btn-class\"\r\n                                                    onClick={() =>\r\n                                                        setCurrent(c.id)\r\n                                                    }\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                    {c.name}\r\n                                                </Button>\r\n                                            </Col>\r\n                                        ))}\r\n                                </Row>\r\n                            </Spin>\r\n                            <Divider />\r\n\r\n                            {courses &&\r\n                            courses.filter((c) => {\r\n                                if (current) {\r\n                                    if (c.class === current) {\r\n                                        return true;\r\n                                    } else {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                                return true;\r\n                            }).length > 0 ? (\r\n                                courses\r\n                                    .filter((c) => {\r\n                                        if (current) {\r\n                                            if (c.class === current) {\r\n                                                return true;\r\n                                            } else {\r\n                                                return false;\r\n                                            }\r\n                                        }\r\n                                        return true;\r\n                                    })\r\n                                    .map((c) => (\r\n                                        <div\r\n                                            className=\"subject-detail\"\r\n                                            onClick={() => setCurrentCourse(c)}\r\n                                        >\r\n                                            <div\r\n                                                style={{\r\n                                                    position: \"absolute\",\r\n                                                    top: 10,\r\n                                                    right: 10,\r\n                                                }}\r\n                                            >\r\n                                                <Tag color=\"green\">\r\n                                                    {getClassName(c.class)}\r\n                                                </Tag>\r\n                                            </div>\r\n                                            <Row\r\n                                                gutter={20}\r\n                                                type=\"flex\"\r\n                                                align=\"middle\"\r\n                                            >\r\n                                                <Col span={4}>\r\n                                                    <img\r\n                                                        src={`//img.youtube.com/vi/${yp(\r\n                                                            c.videoURL\r\n                                                        )}/0.jpg`}\r\n                                                        style={{\r\n                                                            maxWidth: \"100%\",\r\n                                                        }}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={20}>\r\n                                                    <h3>{c.name}</h3>\r\n                                                    <p>{c.desc}</p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    ))\r\n                            ) : (\r\n                                <Empty\r\n                                    description={\r\n                                        \"Хичээл одоогоор байхгүй байна !\"\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Subject;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { firebase } from '../api/firebase';\r\nconst Context = React.createContext();\r\n\r\nconst ContextProvider = props => {\r\n\tconst [user, setUser] = useState(false);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tuseEffect(() => {\r\n\t\tfirebase.auth().onAuthStateChanged(user => {\r\n\t\t\tsetUser(user);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\treturn (\r\n\t\t<Context.Provider value={{ user, loading }}>\r\n\t\t\t{props.children}\r\n\t\t</Context.Provider>\r\n\t);\r\n};\r\n\r\nconst ContextConsumer = Context.Consumer;\r\n\r\nexport { ContextProvider, ContextConsumer };\r\nexport default Context;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Divider, Table, Button, Row, Col, Spin, Icon, Tooltip } from \"antd\";\r\nimport Header from \"../header/Header\";\r\nimport \"./EecView.scss\";\r\nimport api from \"../api/eec\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nconst EecView = (props) => {\r\n    const columns = [\r\n        {\r\n            title: \"Хичээл\",\r\n            dataIndex: \"category\",\r\n            render: (c) => {\r\n                return <h3>{c}</h3>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Хувилбарууд\",\r\n            key: \"versions\",\r\n            render: (r) => {\r\n                return Object.keys(r.versions).map((key) => (\r\n                    <Tooltip title=\"Шалгалт Өгөх\">\r\n                        <Link to={`/eec/${r.id}/${key}`}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                style={{\r\n                                    width: 30,\r\n                                    marginRight: 10,\r\n                                    textAlign: \"center\",\r\n                                    padding: 0,\r\n                                }}\r\n                            >\r\n                                {key.toLocaleUpperCase()}\r\n                            </Button>\r\n                        </Link>\r\n                    </Tooltip>\r\n                ));\r\n            },\r\n        },\r\n    ];\r\n\r\n    const [years, setYears] = useState({\r\n        \"2000\": [],\r\n        \"2001\": [],\r\n        \"2002\": [],\r\n        \"2003\": [],\r\n        \"2004\": [],\r\n        \"2005\": [],\r\n        \"2006\": [],\r\n        \"2007\": [],\r\n        \"2008\": [],\r\n        \"2009\": [],\r\n        \"2010\": [],\r\n        \"2011\": [],\r\n        \"2012\": [],\r\n        \"2013\": [],\r\n        \"2014\": [],\r\n        \"2015\": [],\r\n        \"2016\": [],\r\n        \"2017\": [],\r\n        \"2018\": [],\r\n        \"2019\": [],\r\n        \"2020\": [],\r\n        \"2021\": [],\r\n        \"2022\": [],\r\n        \"2023\": [],\r\n        \"2024\": [],\r\n        \"2025\": [],\r\n    });\r\n\r\n    // const [data, setData] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            const res = await api.find();\r\n            if (res.success) {\r\n                let tmp = { ...years };\r\n                res.data.forEach((d) => {\r\n                    tmp[d.year].push(d);\r\n                });\r\n                setYears(tmp);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetch();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page-ecc-view\">\r\n            <Header />\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col span={20}>\r\n                    <h1 className=\"text-center\" style={{ marginBottom: 50 }}>\r\n                        Элсэлтийн ерөнхий шалгалтын сэдэв даалгавар\r\n                    </h1>\r\n                    <Spin\r\n                        spinning={loading}\r\n                        indicator={<Icon type=\"loading\" />}\r\n                    >\r\n                        {Object.keys(years)\r\n                            .filter((y) => years[y].length > 0)\r\n                            .map((year) => (\r\n                                <>\r\n                                    <Divider>\r\n                                        <h2>{year}</h2>\r\n                                    </Divider>\r\n                                    <Table\r\n                                        columns={columns}\r\n                                        dataSource={years[year]}\r\n                                    />\r\n                                </>\r\n                            ))}\r\n                    </Spin>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EecView;\r\n","export default {\r\n    mk: (limit) => {\r\n        let tmp = [];\r\n        for (let i = 0; i < limit; i++) {\r\n            tmp.push(i);\r\n        }\r\n        return tmp;\r\n    },\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ABtn = (props) => {\r\n    const { current } = props;\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setSelected(current);\r\n    }, [current]);\r\n    return (\r\n        <Button\r\n            type={selected ? \"primary\" : \"default\"}\r\n            shape=\"circle\"\r\n            onClick={() => {\r\n                props.onClick();\r\n                setSelected(true);\r\n            }}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default ABtn;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport ABtn from \"./ABtn\";\r\nimport _ from \"../utils/lodash\";\r\n\r\nconst ABtns = (props) => {\r\n    const [current, setCurrent] = useState(false);\r\n    return _.mk(12).map((j) => (\r\n        <section>\r\n            <ABtn current={j === current} onClick={() => setCurrent(j)}>\r\n                {j > 9 ? \"-\" : j}\r\n            </ABtn>\r\n        </section>\r\n    ));\r\n};\r\n\r\nexport default ABtns;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport ABtn from \"./ABtn\";\r\nimport _ from \"../utils/lodash\";\r\n\r\nconst ABtns = (props) => {\r\n    const types = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\r\n    const [current, setCurrent] = useState(false);\r\n    return _.mk(5).map((j) => (\r\n        <div style={{ marginRight: 20, display: \"inline-block\" }}>\r\n            <ABtn current={j === current} onClick={() => setCurrent(j)}>\r\n                {types[j]}\r\n            </ABtn>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default ABtns;\r\n","import React from \"react\";\r\nimport { Divider, Button, Row, Col } from \"antd\";\r\nimport _ from \"../utils/lodash\";\r\nimport ABtn from \"./ABtn\";\r\nimport ABtns from \"./ABtns\";\r\nimport ABtns1 from \"./ABtns1\";\r\nconst Section = (props) => {\r\n    const { index, questions } = props;\r\n    const types = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\r\n    return (\r\n        <section className=\"test-section\">\r\n            <Divider>{index + 1}-р Хэсэг</Divider>\r\n            {questions.map((q, i) => (\r\n                <div className=\"section-q\">\r\n                    <b>{i + 1}.</b>\r\n                    <div style={{ flex: 1 }}>\r\n                        {q.type === 0 ||\r\n                            (q.type === 1 && (\r\n                                <>\r\n                                    <ABtns1 />\r\n                                </>\r\n                            ))}\r\n\r\n                        {_.mk(q.totalChoice).map((i) =>\r\n                            q.type === 0 || q.type === 1 ? (\r\n                                <></>\r\n                            ) : (\r\n                                <div className=\"s2\">\r\n                                    <section className=\"text-right\">\r\n                                        <b>{types[i].toLowerCase()}: </b>\r\n                                    </section>\r\n                                    <ABtns />\r\n                                </div>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Button, Tag, Icon, Tooltip, Modal, Spin } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./EecTest.scss\";\r\nimport api from \"../api/eec\";\r\nimport Section from \"./Section\";\r\nconst EecTest = (props) => {\r\n    const { id, version } = props.match.params;\r\n    const [data, setData] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetch = async (id) => {\r\n            setLoading(true);\r\n            const res = await api.findOne(id);\r\n            if (res.success) {\r\n                setData(res.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        id && fetch(id);\r\n    }, [id]);\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return (\r\n        <main className=\"page-eec-test\">\r\n            <Modal\r\n                footer={false}\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n            >\r\n                <Spin indicator={<Icon type=\"loading\" spin />}>\r\n                    <h1 style={{ textAlign: \"center\", marginTop: 20 }}>\r\n                        Таны Оноо: 0\r\n                    </h1>\r\n                </Spin>\r\n            </Modal>\r\n            <div className=\"test-header\">\r\n                <div style={{ flex: 1 }}>\r\n                    <Row gutter={20} type=\"flex\" align=\"middle\">\r\n                        <Col xs={24} md={12}>\r\n                            <Link to={\"/eec\"}>\r\n                                <Icon type=\"arrow-left\" />\r\n                            </Link>{\" \"}\r\n                            {data.year} он - {data.category}\r\n                            <div className=\"v\">\r\n                                <Tooltip title=\"Хувилбар\">{version}</Tooltip>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={24} md={12} className=\"text-right\">\r\n                            <Button\r\n                                size=\"large\"\r\n                                type=\"primary\"\r\n                                onClick={() => setVisible(true)}\r\n                            >\r\n                                Шалгалт Илгээх\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n            {data && data.versions && data.versions[version] && (\r\n                <Row>\r\n                    <Col xs={24} md={12}>\r\n                        <iframe\r\n                            src={data.versions[version].file}\r\n                            frameborder=\"0\"\r\n                        ></iframe>\r\n                    </Col>\r\n                    <Col xs={24} md={12}>\r\n                        <div className=\"test-content\">\r\n                            {data.versions[version].sections.map((s, i) => (\r\n                                <Section {...s} index={i} />\r\n                            ))}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n            {/* (\r\n                            <div className=\"not-found\">{`${version} - энэ хувилбар байхгүй байна !`}</div>\r\n                        )} */}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default EecTest;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { Spin, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.less\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Home from \"./home/Home\";\r\nimport Login from \"./login/Login\";\r\nimport Subject from \"./subject/Subject\";\r\nimport Context, { ContextProvider, ContextConsumer } from \"./context/Context\";\r\nimport EecView from \"./eec-view/EecView\";\r\nimport EecTest from \"./eec-test/EecTest\";\r\n\r\nconst Private = (props) => {\r\n    const { user } = useContext(Context);\r\n    return user ? <Route {...props} /> : <Redirect to={\"/login\"} />;\r\n};\r\n\r\nconst Public = (props) => {\r\n    const { user } = useContext(Context);\r\n    return user ? <Redirect to={\"/dashboard\"} /> : <Route {...props} />;\r\n};\r\n\r\nconst App = () => {\r\n    return (\r\n        <ContextProvider>\r\n            <Router>\r\n                <ContextConsumer>\r\n                    {({ loading }) =>\r\n                        loading ? (\r\n                            <Spin indicator={<Icon type=\"spin\" spin />} />\r\n                        ) : (\r\n                            <Switch>\r\n                                <Route path={\"/\"} component={Home} exact />\r\n                                <Route\r\n                                    path={\"/subjects/:id\"}\r\n                                    component={Subject}\r\n                                    exact\r\n                                />\r\n\r\n                                <Route\r\n                                    path={\"/eec\"}\r\n                                    component={EecView}\r\n                                    exact\r\n                                />\r\n\r\n                                <Route\r\n                                    path={\"/eec/:id/:version\"}\r\n                                    component={EecTest}\r\n                                    exact\r\n                                />\r\n\r\n                                <Private\r\n                                    path={\"/dashboard\"}\r\n                                    component={Dashboard}\r\n                                />\r\n                                <Public\r\n                                    path={\"/login\"}\r\n                                    component={Login}\r\n                                    exact\r\n                                />\r\n                                <Redirect to={\"/\"} />\r\n                            </Switch>\r\n                        )\r\n                    }\r\n                </ContextConsumer>\r\n            </Router>\r\n        </ContextProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}